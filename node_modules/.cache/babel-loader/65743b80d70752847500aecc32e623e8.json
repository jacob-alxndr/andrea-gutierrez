{"ast":null,"code":"var _jsxFileName = \"/Users/Jamartinez510/Sites/projects/andrea-gutierrez/src/js/components/Lightbox.js\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./ImageCard\";\nimport { Link } from \"react-router-dom\";\nexport default class Lightbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisplayed: [],\n      yAxis: 0\n    };\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.handleDirection = this.handleDirection.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.updateAxis = this.updateAxis.bind(this);\n  }\n\n  componentDidMount() {\n    // console.log(\"Lightbox\", \"Mount\");\n    const displayedList = Array.from({\n      length: this.props.imageSet.length\n    }).map((img, i) => i === 0 ? true : false);\n    this.setState({\n      isDisplayed: displayedList\n    });\n    document.addEventListener(\"keydown\", this.handleDirection);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.imageSet !== this.props.imageSet) {\n      const displayedList = Array.from({\n        length: this.props.imageSet.length\n      }).map((img, i) => i === 0 ? true : false);\n      this.setState({\n        isDisplayed: displayedList\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleDirection);\n  }\n\n  handleDirection(e) {\n    const direction = e.currentTarget.innerText;\n    const index = this.state.isDisplayed.findIndex(i => i === true);\n\n    if (e.code === \"ArrowLeft\" || direction === \"prev\") {\n      this.updateDisplay(index, true);\n    } else if (e.code === \"ArrowRight\" || direction === \"next\") {\n      this.updateDisplay(index);\n    } else {\n      return false;\n    }\n  }\n\n  updateDisplay(index, back = false) {\n    const newDisplayed = this.state.isDisplayed.map(img => false);\n\n    if (back) {\n      if (index - 1 < 0) {\n        newDisplayed[this.state.isDisplayed.length - 1] = true;\n      } else if (index - 1 >= 0) {\n        console.log(\"else if\");\n        newDisplayed[index - 1] = true;\n      }\n    } else if (back === false) {\n      if (index + 1 > this.state.isDisplayed.length - 1) {\n        newDisplayed[0] = true;\n      } else if (index + 1 <= this.state.isDisplayed.length - 1) {\n        newDisplayed[index + 1] = true;\n      }\n    }\n\n    this.setState({\n      isDisplayed: newDisplayed\n    }, function () {\n      const index = this.state.isDisplayed.findIndex(i => i === true);\n      this.props.updateIndex(index);\n    });\n  }\n\n  handleClose(e) {\n    // console.log(e);\n    window.scroll(0, this.state.yAxis);\n    this.props.history.push(`/portfolio`, {\n      y: this.state.yAxis\n    });\n    window.scroll(0, this.state.yAxis);\n  }\n\n  render() {\n    const {\n      isDisplayed\n    } = this.state;\n    let lightBox;\n    this.props.isModal ? lightBox = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Lightbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"close\",\n      onClick: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 13\n      }\n    }, \"close\"), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDirection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }\n    }, \"prev\"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Lightbox__container\",\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 13\n      }\n    }, this.props.imageSet.map((img, i) => {\n      return /*#__PURE__*/React.createElement(ImageCard, {\n        styles: \"home\",\n        index: i,\n        updateDisplay: this.updateDisplay,\n        key: i,\n        src: img.url,\n        alt: img.alt,\n        display: isDisplayed[i],\n        images: img.images,\n        isModal: this.props.isModal,\n        updateAxis: this.updateAxis,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 19\n        }\n      });\n    })), /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this.handleDirection,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, \"next\")) : lightBox = /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Lightbox\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"Lightbox__container\",\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 13\n      }\n    }, this.props.imageSet.map((img, i) => {\n      return /*#__PURE__*/React.createElement(ImageCard, {\n        styles: \"home\",\n        index: i,\n        updateDisplay: this.updateDisplay,\n        key: i,\n        src: img.url,\n        alt: img.alt,\n        display: isDisplayed[i],\n        images: img.images,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 19\n        }\n      });\n    })));\n    return lightBox;\n  }\n\n}","map":{"version":3,"sources":["/Users/Jamartinez510/Sites/projects/andrea-gutierrez/src/js/components/Lightbox.js"],"names":["React","Component","ImageCard","Link","Lightbox","constructor","props","state","isDisplayed","yAxis","updateDisplay","bind","handleDirection","handleClose","updateAxis","componentDidMount","displayedList","Array","from","length","imageSet","map","img","i","setState","document","addEventListener","componentDidUpdate","prevProps","componentWillUnmount","removeEventListener","e","direction","currentTarget","innerText","index","findIndex","code","back","newDisplayed","console","log","updateIndex","window","scroll","history","push","y","render","lightBox","isModal","url","alt","images"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ImageCard from \"./ImageCard\";\nimport { Link } from \"react-router-dom\";\nexport default class Lightbox extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisplayed: [],\n      yAxis: 0,\n    };\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.handleDirection = this.handleDirection.bind(this);\n    this.handleClose = this.handleClose.bind(this);\n    this.updateAxis = this.updateAxis.bind(this);\n  }\n\n  componentDidMount() {\n    // console.log(\"Lightbox\", \"Mount\");\n    const displayedList = Array.from({\n      length: this.props.imageSet.length,\n    }).map((img, i) => (i === 0 ? true : false));\n    this.setState({ isDisplayed: displayedList });\n    document.addEventListener(\"keydown\", this.handleDirection);\n  }\n  componentDidUpdate(prevProps) {\n    if (prevProps.imageSet !== this.props.imageSet) {\n      const displayedList = Array.from({\n        length: this.props.imageSet.length,\n      }).map((img, i) => (i === 0 ? true : false));\n      this.setState({ isDisplayed: displayedList });\n    }\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleDirection);\n  }\n  handleDirection(e) {\n    const direction = e.currentTarget.innerText;\n    const index = this.state.isDisplayed.findIndex((i) => i === true);\n    if (e.code === \"ArrowLeft\" || direction === \"prev\") {\n      this.updateDisplay(index, true);\n    } else if (e.code === \"ArrowRight\" || direction === \"next\") {\n      this.updateDisplay(index);\n    } else {\n      return false;\n    }\n  }\n  updateDisplay(index, back = false) {\n    const newDisplayed = this.state.isDisplayed.map((img) => false);\n    if (back) {\n      if (index - 1 < 0) {\n        newDisplayed[this.state.isDisplayed.length - 1] = true;\n      } else if (index - 1 >= 0) {\n        console.log(\"else if\");\n        newDisplayed[index - 1] = true;\n      }\n    } else if (back === false) {\n      if (index + 1 > this.state.isDisplayed.length - 1) {\n        newDisplayed[0] = true;\n      } else if (index + 1 <= this.state.isDisplayed.length - 1) {\n        newDisplayed[index + 1] = true;\n      }\n    }\n    this.setState({ isDisplayed: newDisplayed }, function () {\n      const index = this.state.isDisplayed.findIndex((i) => i === true);\n      this.props.updateIndex(index);\n    });\n  }\n\n  handleClose(e) {\n    // console.log(e);\n    window.scroll(0, this.state.yAxis);\n    this.props.history.push(`/portfolio`, { y: this.state.yAxis });\n    window.scroll(0, this.state.yAxis);\n  }\n\n  render() {\n    const { isDisplayed } = this.state;\n    let lightBox;\n    this.props.isModal\n      ? (lightBox = (\n          <div className=\"Lightbox\">\n            <button className={\"close\"} onClick={this.handleClose}>\n              close\n            </button>\n            <button onClick={this.handleDirection}>prev</button>\n            <div className=\"Lightbox__container\" tabIndex={0}>\n              {this.props.imageSet.map((img, i) => {\n                return (\n                  <ImageCard\n                    styles={\"home\"}\n                    index={i}\n                    updateDisplay={this.updateDisplay}\n                    key={i}\n                    src={img.url}\n                    alt={img.alt}\n                    display={isDisplayed[i]}\n                    images={img.images}\n                    isModal={this.props.isModal}\n                    updateAxis={this.updateAxis}\n                  />\n                );\n              })}\n            </div>\n            <button onClick={this.handleDirection}>next</button>\n          </div>\n        ))\n      : (lightBox = (\n          <div className=\"Lightbox\">\n            <div className=\"Lightbox__container\" tabIndex={0}>\n              {this.props.imageSet.map((img, i) => {\n                return (\n                  <ImageCard\n                    styles={\"home\"}\n                    index={i}\n                    updateDisplay={this.updateDisplay}\n                    key={i}\n                    src={img.url}\n                    alt={img.alt}\n                    display={isDisplayed[i]}\n                    images={img.images}\n                  />\n                );\n              })}\n            </div>\n          </div>\n        ));\n\n    return lightBox;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}