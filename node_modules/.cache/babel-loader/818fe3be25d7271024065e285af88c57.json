{"ast":null,"code":"var _jsxFileName = \"/Users/Jamartinez510/Sites/projects/andrea-gutierrez/src/js/components/ImageGallery.js\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./ImageCard\";\nimport RowContainer from \"../layout/RowContainer\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger.js\";\ngsap.registerPlugin(ScrollTrigger);\nexport default class ImageGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      galleries: [],\n      justifyContent: []\n    }; // this.tl = gsap.timeline({ paused: true });\n\n    this.myElements = [];\n  }\n\n  async componentDidMount() {\n    console.log(this.myElements);\n    this.myElements = this.myElements.map(el => el.imageRef.current);\n    this.myElements.forEach(el => {\n      console.log(el);\n      const tl = gsap.timeline({\n        paused: true,\n        scrollTrigger: {\n          trigger: el,\n          start: \"start 30%\",\n          end: \"bottom 60%\",\n          pin: true // markers: true,\n\n        }\n      });\n      tl.from(el, 1, {\n        y: 20,\n        opacity: 0,\n        stagger: {\n          amount: 0.3\n        },\n        // onComplete: this.tl.kill(),\n        clearProps: \"all\"\n      });\n    });\n  }\n\n  componentWillUnmount() {// console.log(\"unmount\");\n    // this.tl.kill();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.galleries !== this.props.galleries) {\n      this.setState({\n        galleries: this.props.galleries\n      });\n    }\n  }\n\n  render() {\n    const {\n      match,\n      location,\n      history\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ImageGallery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 7\n      }\n    }, this.props.galleries.sort((a, b) => a.position > b.position ? 1 : -1).map((gallery, i) => {\n      const {\n        heroSrc,\n        title,\n        slug,\n        year,\n        alt,\n        link,\n        images\n      } = gallery;\n      return /*#__PURE__*/React.createElement(RowContainer, {\n        key: slug,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 15\n        }\n      }, /*#__PURE__*/React.createElement(ImageCard, {\n        ref: node => this.myElements[i] = node,\n        index: i,\n        key: i,\n        src: heroSrc,\n        title: title,\n        slug: slug,\n        year: year,\n        alt: alt,\n        link: link,\n        images: images,\n        match: match,\n        location: location,\n        history: history,\n        styles: \"\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 17\n        }\n      }));\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/Jamartinez510/Sites/projects/andrea-gutierrez/src/js/components/ImageGallery.js"],"names":["React","Component","ImageCard","RowContainer","gsap","ScrollTrigger","registerPlugin","ImageGallery","constructor","props","state","galleries","justifyContent","myElements","componentDidMount","console","log","map","el","imageRef","current","forEach","tl","timeline","paused","scrollTrigger","trigger","start","end","pin","from","y","opacity","stagger","amount","clearProps","componentWillUnmount","componentDidUpdate","prevProps","setState","render","match","location","history","sort","a","b","position","gallery","i","heroSrc","title","slug","year","alt","link","images","node"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ImageCard from \"./ImageCard\";\nimport RowContainer from \"../layout/RowContainer\";\nimport { gsap } from \"gsap\";\nimport { ScrollTrigger } from \"gsap/ScrollTrigger.js\";\ngsap.registerPlugin(ScrollTrigger);\nexport default class ImageGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      galleries: [],\n      justifyContent: [],\n    };\n    // this.tl = gsap.timeline({ paused: true });\n    this.myElements = [];\n  }\n\n  async componentDidMount() {\n    console.log(this.myElements);\n    this.myElements = this.myElements.map((el) => el.imageRef.current);\n    this.myElements.forEach((el) => {\n      console.log(el);\n      const tl = gsap.timeline({\n        paused: true,\n        scrollTrigger: {\n          trigger: el,\n          start: \"start 30%\",\n          end: \"bottom 60%\",\n          pin: true,\n          // markers: true,\n        },\n      });\n      tl.from(el, 1, {\n        y: 20,\n        opacity: 0,\n        stagger: { amount: 0.3 },\n        // onComplete: this.tl.kill(),\n        clearProps: \"all\",\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    // console.log(\"unmount\");\n    // this.tl.kill();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.galleries !== this.props.galleries) {\n      this.setState({ galleries: this.props.galleries });\n    }\n  }\n  render() {\n    const { match, location, history } = this.props;\n\n    return (\n      <div className=\"ImageGallery\">\n        {this.props.galleries\n          .sort((a, b) => (a.position > b.position ? 1 : -1))\n          .map((gallery, i) => {\n            const { heroSrc, title, slug, year, alt, link, images } = gallery;\n\n            return (\n              <RowContainer key={slug}>\n                <ImageCard\n                  ref={(node) => (this.myElements[i] = node)}\n                  index={i}\n                  key={i}\n                  src={heroSrc}\n                  title={title}\n                  slug={slug}\n                  year={year}\n                  alt={alt}\n                  link={link}\n                  images={images}\n                  match={match}\n                  location={location}\n                  history={history}\n                  styles={\"\"}\n                />\n              </RowContainer>\n            );\n          })}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}