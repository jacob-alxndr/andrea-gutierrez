{"ast":null,"code":"var _jsxFileName = \"/Users/Jamartinez510/Sites/projects/andrea-react/src/js/components/ImageGallery.js\";\nimport React, { Component } from \"react\";\nimport ImageCard from \"./ImageCard\";\nexport default class ImageGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisplayed: []\n    };\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.handleDirection = this.handleDirection.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleDirection);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleDirection);\n  }\n\n  handleDirection(e) {\n    const index = this.state.isDisplayed.findIndex(i => i === true);\n\n    if (e.code === \"ArrowLeft\") {\n      console.log(index);\n      this.updateDisplay(index, true);\n    } else if (e.code === \"ArrowRight\") {\n      this.updateDisplay(index);\n    } else {\n      return false;\n    }\n  }\n\n  updateDisplay(index, back = false) {\n    const newDisplayed = this.state.isDisplayed.map(img => false);\n\n    if (back) {\n      if (index - 1 < 0) {\n        console.log(\"if\");\n        newDisplayed[this.state.isDisplayed.length - 1] = true;\n        console.log(newDisplayed);\n      } else if (index - 1 >= 0) {\n        console.log(\"else if\");\n        newDisplayed[index - 1] = true;\n        console.log(newDisplayed);\n      }\n    } else if (back === false) {\n      if (index + 1 > this.state.isDisplayed.length - 1) {\n        newDisplayed[0] = true;\n      } else if (index + 1 <= this.state.isDisplayed.length - 1) {\n        newDisplayed[index + 1] = true;\n      }\n    }\n\n    this.setState({\n      isDisplayed: newDisplayed\n    }, function () {\n      const index = this.state.isDisplayed.findIndex(i => i === true);\n      this.props.updateIndex(index);\n    });\n  } //   handleClick(e) {\n  //     console.log();\n  //     this.setState({});\n  //   }\n\n\n  render() {\n    const {\n      isDisplayed\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ImageGallery\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"ImageGallery__container\",\n      tabIndex: 0,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }\n    }, this.props.imageList.map((img, i) => {\n      return /*#__PURE__*/React.createElement(ImageCard, {\n        index: i,\n        updateDisplay: this.updateDisplay,\n        key: i,\n        img: img,\n        display: isDisplayed[i],\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }\n      });\n    })));\n  }\n\n}","map":{"version":3,"sources":["/Users/Jamartinez510/Sites/projects/andrea-react/src/js/components/ImageGallery.js"],"names":["React","Component","ImageCard","ImageGallery","constructor","props","state","isDisplayed","updateDisplay","bind","handleDirection","componentDidMount","document","addEventListener","componentWillUnmount","removeEventListener","e","index","findIndex","i","code","console","log","back","newDisplayed","map","img","length","setState","updateIndex","render","imageList"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ImageCard from \"./ImageCard\";\nexport default class ImageGallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isDisplayed: [],\n    };\n    this.updateDisplay = this.updateDisplay.bind(this);\n    this.handleDirection = this.handleDirection.bind(this);\n  }\n\n  componentDidMount() {\n    document.addEventListener(\"keydown\", this.handleDirection);\n  }\n  componentWillUnmount() {\n    document.removeEventListener(\"keydown\", this.handleDirection);\n  }\n  handleDirection(e) {\n    const index = this.state.isDisplayed.findIndex((i) => i === true);\n    if (e.code === \"ArrowLeft\") {\n      console.log(index);\n      this.updateDisplay(index, true);\n    } else if (e.code === \"ArrowRight\") {\n      this.updateDisplay(index);\n    } else {\n      return false;\n    }\n  }\n  updateDisplay(index, back = false) {\n    const newDisplayed = this.state.isDisplayed.map((img) => false);\n    if (back) {\n      if (index - 1 < 0) {\n        console.log(\"if\");\n        newDisplayed[this.state.isDisplayed.length - 1] = true;\n\n        console.log(newDisplayed);\n      } else if (index - 1 >= 0) {\n        console.log(\"else if\");\n        newDisplayed[index - 1] = true;\n        console.log(newDisplayed);\n      }\n    } else if (back === false) {\n      if (index + 1 > this.state.isDisplayed.length - 1) {\n        newDisplayed[0] = true;\n      } else if (index + 1 <= this.state.isDisplayed.length - 1) {\n        newDisplayed[index + 1] = true;\n      }\n    }\n    this.setState({ isDisplayed: newDisplayed }, function () {\n      const index = this.state.isDisplayed.findIndex((i) => i === true);\n      this.props.updateIndex(index);\n    });\n  }\n\n  //   handleClick(e) {\n  //     console.log();\n  //     this.setState({});\n  //   }\n  render() {\n    const { isDisplayed } = this.state;\n    return (\n      <div className=\"ImageGallery\">\n        <div className=\"ImageGallery__container\" tabIndex={0}>\n          {this.props.imageList.map((img, i) => {\n            return (\n              <ImageCard\n                index={i}\n                updateDisplay={this.updateDisplay}\n                key={i}\n                img={img}\n                display={isDisplayed[i]}\n              />\n            );\n          })}\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}